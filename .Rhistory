geom_density(alpha = 0.5) +
labs(title = "Job Satisfaction vs. Employee Attrition",
x = "Job Satisfaction",
y = "Density") +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal()
ggplot(df_clean, aes(x = job_satisfaction, fill = left_company)) +
geom_density(alpha = 0.5) +
labs(title = "Job Satisfaction vs. Employee Attrition",
x = "Job Satisfaction",
y = "Density") +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal()
ggplot(df, aes(x = job_satisfaction, fill = left_company)) +
geom_bar(position = "dodge") +
labs(title = "Job Satisfaction vs. Employee Attrition",
x = "Job Satisfaction",
y = "Count") +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal()
df = read.csv("D:/GBus/Employee.csv", header = TRUE)
ggplot(df, aes(x = job_satisfaction, fill = left_company)) +
geom_bar(position = "dodge") +
labs(title = "Job Satisfaction vs. Employee Attrition",
x = "Job Satisfaction",
y = "Count") +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal()
# Data preparation: Create a new factor variable for job satisfaction categories
df$job_satisfaction <- factor(df$job_satisfaction, levels = c("Low", "Medium", "High", "Very High"))
# Summary table: Count of attrition by job satisfaction level
summary_table <- table(df$job_satisfaction, df$left_company)
print(summary_table)
# Create a bar plot to visualize job satisfaction and attrition
barplot(summary_table, beside = TRUE, legend = rownames(summary_table),
main = "Job Satisfaction vs. Employee Attrition",
xlab = "Job Satisfaction Level",
ylab = "Count")
# Calculate proportions for a more meaningful comparison
prop_table <- prop.table(summary_table, margin = 2)
print(prop_table)
# Create a stacked bar plot to visualize proportions of attrition by job satisfaction
barplot(prop_table, beside = TRUE, legend = rownames(prop_table),
main = "Job Satisfaction vs. Employee Attrition (Proportions)",
xlab = "Job Satisfaction Level",
ylab = "Proportion of Attrition")
# Remove rows with NA values and update the data frame
df <- na.omit(df)
table(df$miles_from_home, df$left_company)
#Q1
# Create a stacked bar plot for miles_from_home and attrition
barplot(table(df$miles_from_home, df$left_company), beside=TRUE, main="Distance from Home vs. Employee Attrition", xlab="Miles from Home to Office", ylab="Count")
#Q2
# Create summary statistics by left_company
summary(df$salary[df$left_company == "Yes"])
summary(df$salary[df$left_company == "No"])
#Q3
# Create a summary table for job satisfaction by attrition status
summary(df$job_satisfaction[df$left_company == "Yes"])
summary(df$job_satisfaction[df$left_company == "No"])
# Data preparation: Create a new factor variable for job satisfaction categories
df$job_satisfaction <- factor(df$job_satisfaction, levels = c("Low", "Medium", "High", "Very High"))
# Summary table: Count of attrition by job satisfaction level
summary_table <- table(df$job_satisfaction, df$left_company)
print(summary_table)
# Create a bar plot to visualize job satisfaction and attrition
barplot(summary_table, beside = TRUE, legend = rownames(summary_table),
main = "Job Satisfaction vs. Employee Attrition",
xlab = "Job Satisfaction Level",
ylab = "Count")
# Calculate proportions for a more meaningful comparison
prop_table <- prop.table(summary_table, margin = 2)
print(prop_table)
# Create a stacked bar plot to visualize proportions of attrition by job satisfaction
barplot(prop_table, beside = TRUE, legend = rownames(prop_table),
main = "Job Satisfaction vs. Employee Attrition (Proportions)",
xlab = "Job Satisfaction Level",
ylab = "Proportion of Attrition")
#Q1
# Create a stacked bar plot for miles_from_home and attrition
barplot(table(df$miles_from_home, df$left_company), beside=TRUE, main="Distance from Home vs. Employee Attrition", xlab="Miles from Home to Office", ylab="Count")
#Q1
# Create a stacked bar plot for miles_from_home and attrition
barplot(table(df$miles_from_home, df$left_company), beside=TRUE, main="Distance from Home vs. Employee Attrition", xlab="Miles from Home to Office", ylab="Count")
df = read.csv("D:/GBus/Employee.csv", header = TRUE)
# Check the dimensions of the dataset
dim(df)
# Display the structure of the dataset
str(df)
# View the first few rows of the dataset
head(df)
# Glimpse at the data using the "glimpse" function from the "dplyr" package
# install.packages("dplyr")
library(dplyr)
glimpse(df)
# Use the "skim" function to get summary statistics and distributions
skim(df)
# Generate summary statistics for numeric variables
summary(df)
# Remove rows with NA values and update the data frame
df <- na.omit(df)
table(df$miles_from_home, df$left_company)
#Q1
# Create a stacked bar plot for miles_from_home and attrition
barplot(table(df$miles_from_home, df$left_company), beside=TRUE, main="Distance from Home vs. Employee Attrition", xlab="Miles from Home to Office", ylab="Count")
library(ggplot2)
library(dplyr)
library(corrplot)
library(skimr)
df = read.csv("D:/GBus/Employee.csv", header = TRUE)
# Check the dimensions of the dataset
dim(df)
# Display the structure of the dataset
str(df)
# View the first few rows of the dataset
head(df)
# Glimpse at the data using the "glimpse" function from the "dplyr" package
# install.packages("dplyr")
library(dplyr)
glimpse(df)
# Use the "skim" function to get summary statistics and distributions
skim(df)
# Generate summary statistics for numeric variables
summary(df)
table(df$miles_from_home, df$left_company)
#Q1
# Create a stacked bar plot for miles_from_home and attrition
barplot(table(df$miles_from_home, df$left_company), beside=TRUE, main="Distance from Home vs. Employee Attrition", xlab="Miles from Home to Office", ylab="Count")
#Q2
# Create summary statistics by left_company
summary(df$salary[df$left_company == "Yes"])
summary(df$salary[df$left_company == "No"])
#Q3
# Create a summary table for job satisfaction by attrition status
summary(df$job_satisfaction[df$left_company == "Yes"])
summary(df$job_satisfaction[df$left_company == "No"])
# Data preparation: Create a new factor variable for job satisfaction categories
df$job_satisfaction <- factor(df$job_satisfaction, levels = c("Low", "Medium", "High", "Very High"))
# Summary table: Count of attrition by job satisfaction level
summary_table <- table(df$job_satisfaction, df$left_company)
print(summary_table)
# Create a bar plot to visualize job satisfaction and attrition
barplot(summary_table, beside = TRUE, legend = rownames(summary_table),
main = "Job Satisfaction vs. Employee Attrition",
xlab = "Job Satisfaction Level",
ylab = "Count")
#Q4
# Calculate mean years at the company by left_company
mean(df$yrs_at_company[df$left_company == "Yes"])
mean(df$yrs_at_company[df$left_company == "No"])
#Q5
# Create a summary table
table(df$business_travel, df$left_company)
# Create a stacked bar plot
barplot(table(df$business_travel, df$left_company), legend=rownames(table(df$business_travel, df$left_company)), beside=TRUE, main="Business Travel vs. Employee Attrition", xlab="Business Travel Level", ylab="Count")
#Q6
summary_6 <- table(df$department, df$left_company)
# Display the summary table
print(summary_6)
# Create a bar plot to visualize the relationship between department and attrition
barplot(summary_6, beside = TRUE, legend = rownames(summary_6),
main = "Department vs. Employee Attrition",
xlab = "Department",
ylab = "Count")
#Q7
# Create a summary table for Question 7
summary_7 <- table(df$department, df$job_level, df$left_company)
# Display the summary table
print(summary_7)
# Create a grouped bar plot to visualize the combined relationship
# between department, job level, and attrition
barplot(summary_7, beside = TRUE, legend = rownames(summary_7),
main = "Department & Job Level vs. Employee Attrition",
xlab = "Department & Job Level",
ylab = "Count")
#Q7
# Create a summary table for Question 7
summary_7 <- table(df$department, df$job_level, df$left_company)
# Display the summary table
print(summary_7)
#Q7
summary_table_combined <- table(df$department, df$job_level, df$left_company)
print(summary_table_combined)
# Create a grouped bar plot to visualize department, job level, and attrition
ggplot(data = df, aes(x = department, fill = left_company)) +
geom_bar(position = "dodge", stat = "count") +
facet_wrap(~job_level, scales = "free_y") +
labs(title = "Department & Job Level vs. Employee Attrition",
x = "Department",
y = "Count") +
scale_fill_manual(values = c("No" = "blue", "Yes" = "red"))
# Create a grouped bar plot to visualize department, job level, and attrition
ggplot(data = df, aes(x = department, fill = left_company)) +
geom_bar(position = "dodge", stat = "count") +
facet_wrap(~job_level, scales = "free_y") +
labs(title = "Department & Job Level vs. Employee Attrition",
x = "Department",
y = "Count") +
scale_fill_manual(values = c("No" = "blue", "Yes" = "red"))+theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(summary_table_combined)
#########################
df$job_level <- factor(df$job_level, levels = c("Associate", "Director", "Manager", "Senior Manager", "Vice President"))
# Create a summary table
summary_table_combined <- table(df$department, df$job_level, df$left_company)
print(summary_table_combined)
# Reshape the summary table for heatmap
summary_table_reshaped <- melt(summary_table_combined)
#########################
library(reshape2)
df$job_level <- factor(df$job_level, levels = c("Associate", "Director", "Manager", "Senior Manager", "Vice President"))
# Create a summary table
summary_table_combined <- table(df$department, df$job_level, df$left_company)
print(summary_table_combined)
# Reshape the summary table for heatmap
summary_table_reshaped <- melt(summary_table_combined)
# Create a heatmap to visualize the relationship
ggplot(data = summary_table_reshaped, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
labs(title = "Relationship Between Department, Job Level, and Employee Attrition",
x = "Department",
y = "Job Level",
fill = "Count") +
scale_fill_gradient(low = "lightblue", high = "darkred") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(summary_table_combined)
# Reshape the summary table for heatmap
summary_table_reshaped <- melt(summary_table_combined)
print(summary_table_combined)
# Reshape the summary table for heatmap
summary_table_reshaped <- melt(summary_table_combined)
# Create a heatmap to visualize the relationship
ggplot(data = summary_table_reshaped, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
labs(title = "Relationship Between Department, Job Level, and Employee Attrition",
x = "Department",
y = "Job Level",
fill = "Count") +
scale_fill_gradient(low = "lightblue", high = "red") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create a heatmap to visualize the relationship
ggplot(data = summary_table_reshaped, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
labs(title = "Relationship Between Department, Job Level, and Employee Attrition",
x = "Department",
y = "Job Level",
fill = "Count") +
scale_fill_gradient(low = "lightblue", high = "darkblue") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
darkblue
# Create a heatmap to visualize the relationship
ggplot(data = summary_table_reshaped, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
labs(title = "Relationship Between Department, Job Level, and Employee Attrition",
x = "Department",
y = "Job Level",
fill = "Count") +
scale_fill_gradient(low = "blue", high = "darkblue") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create a heatmap to visualize the relationship
ggplot(data = summary_table_reshaped, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
labs(title = "Relationship Between Department, Job Level, and Employee Attrition",
x = "Department",
y = "Job Level",
fill = "Count") +
scale_fill_gradient(low = "lightblue", high = "black") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the structure of the dataset
str(df)
#Q2
df_subset <- df %>%
select(left_company, performance_rating)
# Question: Relationship between leaving the company and performance rating
# Create a summary table
summary_table <- table(df_subset$performance_rating, df_subset$left_company)
print(summary_table)
# Create a bar plot to visualize performance rating and attrition
barplot(summary_table, beside = TRUE, legend = rownames(summary_table),
main = "Performance Rating vs. Employee Attrition",
xlab = "Performance Rating",
ylab = "Count")
df <- df[, -ncol(df)]
#Q2
df_subset <- df %>%
select(left_company, performance_rating)
# Question: Relationship between leaving the company and performance rating
# Create a summary table
summary_table <- table(df_subset$performance_rating, df_subset$left_company)
print(summary_table)
# Create a bar plot to visualize performance rating and attrition
barplot(summary_table, beside = TRUE, legend = rownames(summary_table),
main = "Performance Rating vs. Employee Attrition",
xlab = "Performance Rating",
ylab = "Count")
# Check the dimensions of the dataset
dim(df)
# Display the structure of the dataset
str(df)
# View the first few rows of the dataset
head(df)
# Display the structure of the dataset
str(df)
df <- na.omit(df[df$left_company == "Yes" | df$left_company == "No", ])
# Check the dimensions of the dataset
dim(df)
# Display the structure of the dataset
str(df)
# View the first few rows of the dataset
head(df)
# Glimpse at the data using the "glimpse" function from the "dplyr" package
# install.packages("dplyr")
library(dplyr)
glimpse(df)
# Use the "skim" function to get summary statistics and distributions
skim(df)
# Generate summary statistics for numeric variables
summary(df)
table(df$miles_from_home, df$left_company)
#Q1
# Create a stacked bar plot for miles_from_home and attrition
barplot(table(df$miles_from_home, df$left_company), beside=TRUE, main="Distance from Home vs. Employee Attrition", xlab="Miles from Home to Office", ylab="Count")
#Q2
df_subset <- df %>%
select(left_company, performance_rating)
# Question: Relationship between leaving the company and performance rating
# Create a summary table
summary_table <- table(df_subset$performance_rating, df_subset$left_company)
print(summary_table)
# Create a bar plot to visualize performance rating and attrition
barplot(summary_table, beside = TRUE, legend = rownames(summary_table),
main = "Performance Rating vs. Employee Attrition",
xlab = "Performance Rating",
ylab = "Count")
#Q3
# Create a summary table for job satisfaction by attrition status
summary(df$job_satisfaction[df$left_company == "Yes"])
summary(df$job_satisfaction[df$left_company == "No"])
# Data preparation: Create a new factor variable for job satisfaction categories
df$job_satisfaction <- factor(df$job_satisfaction, levels = c("Low", "Medium", "High", "Very High"))
# Summary table: Count of attrition by job satisfaction level
summary_table <- table(df$job_satisfaction, df$left_company)
print(summary_table)
# Create a bar plot to visualize job satisfaction and attrition
barplot(summary_table, beside = TRUE, legend = rownames(summary_table),
main = "Job Satisfaction vs. Employee Attrition",
xlab = "Job Satisfaction Level",
ylab = "Count")
# Calculate proportions for a more meaningful comparison
prop_table <- prop.table(summary_table, margin = 2)
print(prop_table)
#Q4
# Calculate mean years at the company by left_company
mean(df$yrs_at_company[df$left_company == "Yes"])
mean(df$yrs_at_company[df$left_company == "No"])
# Create a stacked bar plot to visualize proportions of attrition by job satisfaction
barplot(prop_table, beside = TRUE, legend = rownames(prop_table),
main = "Job Satisfaction vs. Employee Attrition (Proportions)",
xlab = "Job Satisfaction Level",
ylab = "Proportion of Attrition")
#Q5
# Create a summary table
table(df$business_travel, df$left_company)
# Create a stacked bar plot
barplot(table(df$business_travel, df$left_company), legend=rownames(table(df$business_travel, df$left_company)), beside=TRUE, main="Business Travel vs. Employee Attrition", xlab="Business Travel Level", ylab="Count")
#Q6
summary_6 <- table(df$department, df$left_company)
# Display the summary table
print(summary_6)
# Create a bar plot to visualize the relationship between department and attrition
barplot(summary_6, beside = TRUE, legend = rownames(summary_6),
main = "Department vs. Employee Attrition",
xlab = "Department",
ylab = "Count")
#Q7
library(reshape2)
df$job_level <- factor(df$job_level, levels = c("Associate", "Director", "Manager", "Senior Manager", "Vice President"))
# Create a summary table
summary_table_combined <- table(df$department, df$job_level, df$left_company)
print(summary_table_combined)
# Reshape the summary table for heatmap
summary_table_reshaped <- melt(summary_table_combined)
# Create a heatmap to visualize the relationship
ggplot(data = summary_table_reshaped, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
labs(title = "Relationship Between Department, Job Level, and Employee Attrition",
x = "Department",
y = "Job Level",
fill = "Count") +
scale_fill_gradient(low = "lightblue", high = "black") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create a boxplot to visualize the relationship
ggplot(df, aes(x = left_company, y = yrs_at_company, fill = left_company)) +
geom_boxplot() +
labs(title = "Relationship Between Years at Company and Employee Attrition",
x = "Attrition Status",
y = "Years at Company") +
scale_fill_manual(values = c("No" = "lightblue", "Yes" = "lightcoral")) +
theme_minimal()
#Q4
# Calculate mean years at the company by left_company
mean(df$yrs_at_company[df$left_company == "Yes"])
mean(df$yrs_at_company[df$left_company == "No"])
#Q4
# Calculate mean years at the company by left_company
median(df$yrs_at_company[df$left_company == "Yes"])
median(df$yrs_at_company[df$left_company == "No"])
# Display the structure of the dataset
str(df)
print(prop_table)
#Q1
# Create a stacked bar plot for miles_from_home and attrition
barplot(table(df$miles_from_home, df$left_company), beside=TRUE, main="Distance from Home vs. Employee Attrition", xlab="Miles from Home to Office", ylab="Count")
#Q1
# Create a stacked bar plot for miles_from_home and attrition
barplot(table(df$miles_from_home, df$left_company), beside=TRUE, main="Distance from Home vs. Employee Attrition", xlab="Miles from Home to Office", ylab="Count")
# Create a stacked bar plot
barplot(table(df$business_travel, df$left_company), legend=rownames(table(df$business_travel, df$left_company)), beside=TRUE, main="Business Travel vs. Employee Attrition", xlab="Business Travel Level", ylab="Count")
# Question: Relationship between leaving the company and performance rating
# Create a summary table
summary_table <- table(df_subset$performance_rating, df_subset$left_company)
print(summary_table)
# Create a bar plot to visualize performance rating and attrition
barplot(summary_table, beside = TRUE, legend = rownames(summary_table),
main = "Performance Rating vs. Employee Attrition",
xlab = "Performance Rating",
ylab = "Count")
#Q4
# Calculate mean years at the company by left_company
median(df$yrs_at_company[df$left_company == "Yes"])
median(df$yrs_at_company[df$left_company == "No"])
#Q3
# Create a summary table for job satisfaction by attrition status
summary(df$job_satisfaction[df$left_company == "Yes"])
summary(df$job_satisfaction[df$left_company == "No"])
# Summary table: Count of attrition by job satisfaction level
summary_table <- table(df$job_satisfaction, df$left_company)
print(summary_table)
# Create a bar plot to visualize job satisfaction and attrition
barplot(summary_table, beside = TRUE, legend = rownames(summary_table),
main = "Job Satisfaction vs. Employee Attrition",
xlab = "Job Satisfaction Level",
ylab = "Count")
# Calculate proportions for a more meaningful comparison
prop_table <- prop.table(summary_table, margin = 2)
print(prop_table)
#Q4
# Calculate mean years at the company by left_company
median(df$yrs_at_company[df$left_company == "Yes"])
median(df$yrs_at_company[df$left_company == "No"])
# Create a boxplot to visualize the relationship
ggplot(df, aes(x = left_company, y = yrs_at_company, fill = left_company)) +
geom_boxplot() +
labs(title = "Relationship Between Years at Company and Employee Attrition",
x = "Attrition Status",
y = "Years at Company") +
scale_fill_manual(values = c("No" = "lightblue", "Yes" = "lightcoral")) +
theme_minimal()
# Create a stacked bar plot
barplot(table(df$business_travel, df$left_company), legend=rownames(table(df$business_travel, df$left_company)), beside=TRUE, main="Business Travel vs. Employee Attrition", xlab="Business Travel Level", ylab="Count")
#Q5
# Create a summary table
table(df$business_travel, df$left_company)
#Q6
summary_6 <- table(df$department, df$left_company)
# Display the summary table
print(summary_6)
# Create a bar plot to visualize the relationship between department and attrition
barplot(summary_6, beside = TRUE, legend = rownames(summary_6),
main = "Department vs. Employee Attrition",
xlab = "Department",
ylab = "Count")
# Reshape the summary table for heatmap
summary_table_reshaped <- melt(summary_table_combined)
print(summary_table_combined)
# Create a heatmap to visualize the relationship
ggplot(data = summary_table_reshaped, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
labs(title = "Relationship Between Department, Job Level, and Employee Attrition",
x = "Department",
y = "Job Level",
fill = "Count") +
scale_fill_gradient(low = "lightblue", high = "black") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
# Create a boxplot
boxplot(len ~ dose, data = ToothGrowth,
main = "Distribution of Tooth Growth Lengths",
xlab = "Dose (mg/day)",
ylab = "Tooth Growth Length",
col = "skyblue")
library(tidymodels)
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
library(tidymodels)
library(dplyr)
update.packages(ask = FALSE)
install.packages("vctrs")
install.packages("rlang")  # Update the 'rlang' package
library(rsample)          # Load the 'rsample' package
install.packages("rlang")
Heart = read.csv('D:/GBus/Heart Disease.csv')
set.seed(123)
split = initial_split(Heart, prop = 0.8)
library(tidymodels)
